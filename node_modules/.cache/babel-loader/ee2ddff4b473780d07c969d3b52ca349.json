{"ast":null,"code":"var _jsxFileName = \"/home/aria-man/Projects/dinamic-image-shower/src/components/App.js\";\nimport React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\nimport Notice from './Notice';\nimport '../style/style.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.isTimeToShowNotice = true;\n    this.state = {\n      searchValue: '',\n      viewState: 'nothing to show',\n      images: []\n    };\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n  }\n\n  async onSearchSubmit(searchValue) {\n    console.log(\"search value submitted to the app and is \" + searchValue);\n    this.setState({\n      searchValue: searchValue\n    });\n    this.setState({\n      viewState: 'loading'\n    });\n    const request = await unsplash.get('/search/photos', {\n      params: {\n        query: searchValue\n      }\n    });\n    this.setState({\n      viewState: 'ready',\n      images: request.data.results\n    });\n\n    if (request.data.results.length === 0) {\n      this.setState({\n        viewState: 'nothing to show'\n      });\n    }\n\n    console.log(request.data.results);\n  }\n\n  showState() {\n    if (this.state.viewState === 'loading') {\n      return React.createElement(\"div\", {\n        className: \"ui active dimmer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui text loader massive\",\n        style: {\n          fontSize: '14px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Loading\"));\n    } else if (this.state.viewState === 'nothing to show') {\n      return React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        style: {\n          fontSize: '20px'\n        },\n        className: \"close icon loading inverted blue-color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"bottom right corner blue-color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"nothing to show\"));\n    } else {\n      return React.createElement(ImageList, {\n        imageList: this.state.images,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }\n  }\n\n  notice() {\n    if (this.isTimeToShowNotice) {\n      this.isTimeToShowNotice = false;\n      return;\n    }\n  } //override\n\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: '10px'\n      },\n      id: \"bg-black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.notice(), React.createElement(SearchBar, {\n      onSubmit: this.onSearchSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), this.showState());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aria-man/Projects/dinamic-image-shower/src/components/App.js"],"names":["React","unsplash","SearchBar","ImageList","Notice","App","Component","constructor","props","isTimeToShowNotice","state","searchValue","viewState","images","onSearchSubmit","bind","console","log","setState","request","get","params","query","data","results","length","showState","fontSize","notice","render","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport unsplash from '../api/unsplash'\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\nimport Notice from './Notice';\nimport  '../style/style.css';\n\nclass App extends React.Component {\n    isTimeToShowNotice= true;\n\n    constructor(props){\n        super();\n        this.state = {searchValue: '', viewState: 'nothing to show', images: []};\n        this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    }\n\n    async onSearchSubmit(searchValue) {\n        console.log(\"search value submitted to the app and is \" + searchValue);\n        this.setState({searchValue: searchValue});\n        this.setState({viewState: 'loading'});\n        const request = await unsplash.get('/search/photos', {\n            params: {\n                query: searchValue\n            },\n        });\n        this.setState({viewState: 'ready' , images: request.data.results});\n        if(request.data.results.length === 0) {\n            this.setState({viewState: 'nothing to show'});\n        }\n        console.log(request.data.results);\n    }\n\n    showState(){\n        if(this.state.viewState === 'loading') {\n            return (\n                    <div className=\"ui active dimmer\">\n                        <div className=\"ui text loader massive\" style={{fontSize: '14px'}}>Loading</div>\n                    </div>\n          );\n        } else if(this.state.viewState === 'nothing to show') {\n            return (\n                <div className=\"center\">\n                    <i style={{fontSize: '20px'}} className=\"close icon loading inverted blue-color\"></i>\n                    <i className=\"bottom right corner blue-color\">nothing to show</i>\n                </div>\n            );\n        } else {\n            return <ImageList imageList={this.state.images}/>;\n        }\n    }\n\n    notice() {\n        if(this.isTimeToShowNotice) {\n            this.isTimeToShowNotice = false;\n            return\n        }\n    }\n\n    //override\n    render() {\n        console.log(this.state);\n        return (\n            <div className=\"ui container\" style={{marginTop: '10px'}} id=\"bg-black\">\n                {this.notice()}\n                <SearchBar onSubmit={this.onSearchSubmit}/>\n                {this.showState()}\n            </div>\n        );\n    }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}