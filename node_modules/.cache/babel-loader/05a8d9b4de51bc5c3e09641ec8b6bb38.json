{"ast":null,"code":"var _jsxFileName = \"/home/aria-man/Projects/dinamic-image-shower/src/components/ImageCard.js\";\nimport React from 'react';\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.postRef = React.createRef();\n    this.imageRef = React.createRef();\n    this.setSpans = this.setSpans.bind(this);\n    this.state = {\n      gridRows: 1\n    };\n  }\n\n  componentDidMount() {\n    this.setSpans();\n  }\n\n  setSpans() {\n    try {\n      this.setState({\n        gridRows: Math.ceil(this.postRef.current.clientHeight + 10)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"post-border\",\n      style: {\n        gridRowEnd: `span ${this.state.gridRows}`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post\",\n      ref: this.postRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"image\",\n      ref: this.imageRef,\n      src: this.props.image.urls.full,\n      key: this.props.imageKey,\n      style: {\n        height: this.props.image.height / 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"img-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.image.alt_description)));\n  }\n\n}\n\nexport default ImageCard;","map":{"version":3,"sources":["/home/aria-man/Projects/dinamic-image-shower/src/components/ImageCard.js"],"names":["React","ImageCard","Component","constructor","props","postRef","createRef","imageRef","setSpans","bind","state","gridRows","componentDidMount","setState","Math","ceil","current","clientHeight","error","console","log","render","gridRowEnd","image","urls","full","imageKey","height","alt_description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAeL,KAAK,CAACM,SAAN,EAAf;AACA,SAAKC,QAAL,GAAgBP,KAAK,CAACM,SAAN,EAAhB;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,QAAL;AACH;;AAEDA,EAAAA,QAAQ,GAAG;AACP,QAAI;AACA,WAAKK,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAEG,IAAI,CAACC,IAAL,CAAU,KAAKV,OAAL,CAAaW,OAAb,CAAqBC,YAArB,GAAoC,EAA9C;AAAX,OAAd;AACH,KAFD,CAEE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAG,QAAO,KAAKZ,KAAL,CAAWC,QAAS;AAAzC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAE,KAAKN,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAE,KAAKE,QAAjC;AAA2C,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWmB,KAAX,CAAiBC,IAAjB,CAAsBC,IAAtE;AAA4E,MAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWsB,QAA5F;AAAsG,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAG,KAAKvB,KAAL,CAAWmB,KAAX,CAAiBI,MAAjB,GAA0B;AAApC,OAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKvB,KAAL,CAAWmB,KAAX,CAAiBK,eAA5C,CAFJ,CADJ,CADJ;AAQH;;AA9BmC;;AAiCxC,eAAe3B,SAAf","sourcesContent":["import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.postRef = React.createRef();\n        this.imageRef = React.createRef();\n        this.setSpans = this.setSpans.bind(this);\n        this.state = {gridRows: 1};\n    }\n\n    componentDidMount() {\n        this.setSpans();\n    }\n\n    setSpans() {\n        try {\n            this.setState({gridRows: Math.ceil(this.postRef.current.clientHeight + 10)});\n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"post-border\" style={{gridRowEnd: `span ${this.state.gridRows}`}}>\n                <div className=\"post\" ref={this.postRef}>\n                    <img className=\"image\" ref={this.imageRef} src={this.props.image.urls.full} key={this.props.imageKey} style={{height: (this.props.image.height / 20)}}/>\n                    <span className=\"img-alt\">{this.props.image.alt_description}</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;"]},"metadata":{},"sourceType":"module"}